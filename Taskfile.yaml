
version: "3"
vars:
  GOLANGCI_LINT_VERSION: v2.1.6
  GOIMPORTS_VERSION: v0.34.0
  DPRINT_VERSION: 0.50.0
tasks:
  init:
    desc: Setup local env
    deps:
      - install:linter
      - install:goimports

  install:linter:
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b .bin/ {{ .GOLANGCI_LINT_VERSION }}

  install:goimports:
    cmds:
      - go install golang.org/x/tools/cmd/goimports@{{ .GOIMPORTS_VERSION }}

  test:
    desc: Run all tests
    cmds:
      - go test ./... -v -race {{ .CLI_ARGS }}

  lint:
    desc: Run the linters
    cmds:
      - ${PWD}/.bin/golangci-lint run --fix -v --timeout 300s {{ .CLI_ARGS }}

  fmt:
    desc: Run format
    cmds:
      - goimports -l -w .

  test-linux:
    desc: Build test Linux test image
    cmds:
      - docker build -f testdata/Dockerfile -t go-apt-test:latest .
      - docker run --rm go-apt-test

  # Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/assets/check-go-task/Taskfile.yml
  go:fix:
    desc: Modernize usages of outdated APIs
    dir: "{{default .DEFAULT_GO_MODULE_PATH .GO_MODULE_PATH}}"
    cmds:
      - go fix {{default .DEFAULT_GO_PACKAGES .GO_PACKAGES}}

  # Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/assets/check-go-task/Taskfile.yml
  go:format:
    desc: Format Go code
    dir: "{{default .DEFAULT_GO_MODULE_PATH .GO_MODULE_PATH}}"
    cmds:
      - go fmt {{default .DEFAULT_GO_PACKAGES .GO_PACKAGES}}

  # Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/assets/check-go-task/Taskfile.yml
  go:lint:
    desc: Lint Go code
    dir: "{{default .DEFAULT_GO_MODULE_PATH .GO_MODULE_PATH}}"
    cmds:
      - |
        if ! which golangci-lint &>/dev/null; then
          echo "golangci-lint not installed or not in PATH."
          echo "Please install: https://golangci-lint.run/usage/install/#local-installation"
          exit 1
        fi
      - golangci-lint run
